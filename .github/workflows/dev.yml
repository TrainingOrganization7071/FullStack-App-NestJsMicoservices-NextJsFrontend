name: CI/CD Microservices Pipeline

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
  workflow_dispatch:
  
  
env:
  RESOURCE_GROUP: 'minimal_infra_auth'
  NODE_VENSION: '20.x'


jobs:
  
  discover_services_by_path:    
    name: Find out all the microservies from path directory
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.list-environments.outputs.environments }}  
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full commit history, not a shallow clone

      - name: output all the environmnets in the infrastructure folder
        id: list-environments
        working-directory: services
        run: |
          directories=($(ls -d */))
          directories=("${directories[@]%/}")
          echo $directories
          json_array=()
          for dir in "${directories[@]}"; do
            if [[ ! " ${excluded_directories[@]} " =~ " $dir " ]]; then
              json_array+=("\"$dir\"")
            fi
          done
          json_elements=$(IFS=,; echo "${json_array[*]}")
          json_output="{ \"environments\": [$json_elements] }"
          echo "environments=$json_output" | tee -a "$GITHUB_OUTPUT"


  discover_services_from_json:    
    name: Find out all the microservies from json file
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.load_services.outputs.services }}
      changed_microservices: ${{ steps.detect_changes.outputs.changed_microservices }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full commit history, not a shallow clone
          
      # Load microservices names from JSON
      - name: Load microservices from JSON
        id: load_services
        run: |
          services=$(jq -r '.microservices[] | .name' ./.github/workflows/microservices.json | paste -sd "," -)
          # Output values as single-line strings
          echo "Services: $services"
          echo "services=$services" >> $GITHUB_OUTPUT
      
      # Load microservices names from JSON -> return array
      - name: Detect changed microservices
        id: detect_changes
        run: |
          services=$(jq -r '.microservices[] | .name' ./.github/workflows/microservices.json)
          echo "---> $services"
          changed_services=()
          echo "---Start---"
          for service in $services; do
            echo "---In $service Check---"
            if git diff --name-only HEAD^ HEAD | grep -q "^services/$service/"; then
              changed_services+=("\"$service\"")
            fi
          done
          json_output=$(IFS=,; echo "[${changed_services[*]}]")*
          echo $json_output
          echo "changed_microservices=$json_output" >> $GITHUB_OUTPUT
          echo "---End---"
    

  exploring_descovered_services:
    runs-on: ubuntu-latest
      
    if: always()
    needs: [discover_services_by_path, discover_services_from_json]
    strategy:
      matrix: ${{ fromJson(needs.discover_services_by_path.outputs.environments) }}
    
    steps:
    - name: List the name of the microcervie -> ${{ matrix.environments }}
      run: |
         echo ${{ matrix.environments }}

    - name: List the name of the microcervies loaded from jsonfile
      run: |
        echo ${{ needs.discover_services_from_json.outputs.environments }}

    - name: List the names of the changed microcervies
      run: |
        echo ${{ needs.discover_services_from_json.outputs.changed_microservices }}


  Build:
    runs-on: ubuntu-latest     
    needs: [ exploring_descovered_services ]
    strategy:
      matrix: ${{ fromJson(needs.discover_services_from_json.outputs.changed_microservices) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full commit history, not a shallow clone
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VENSION}}
        
      - name: Install dependencies
        run: |
          cd ./services/${{ matrix.changed_microservices }}
          npm ci  
        
     





          