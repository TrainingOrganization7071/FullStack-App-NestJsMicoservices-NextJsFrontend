name: CI/CD Microservices Pipeline

on:
  push:
    paths: 
      - ./services/**
    branches:
      - dev
  pull_request:
    branches:
      - dev
  workflow_dispatch:
  
env:
  RESOURCE_GROUP: 'minimal_infra_auth'
  NODE_VENSION: '20.x'

jobs:
  
  discover_services_by_path:    
    name: Find out all the microservices from path directory
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.list-environments.outputs.environments }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Output all the environments in the infrastructure folder
        id: list-environments
        working-directory: services
        run: |
          directories=($(ls -d */))
          directories=("${directories[@]%/}")
          json_array=()
          for dir in "${directories[@]}"; do
            if git diff --name-only HEAD^ HEAD | grep -q "^services/$dir/" && [[ ! " ${excluded_directories[@]} " =~ " $dir " ]]; then
              json_array+=("\"$dir\"")
            fi
          done
          json_output="[$(IFS=,; echo "${json_array[*]}")]"
          echo "environments=$json_output" >> $GITHUB_OUTPUT

      - name: Debug Changed Microservices output
        run: |
          echo "Changed Microservices: ${{ steps.list-environments.outputs.environments }}"

  Build:
    runs-on: ubuntu-latest     
    needs: [discover_services_by_path]
    if: ${{ needs.discover_services_by_path.outputs.environments != '[]' }}
    strategy:
      matrix:
        environments: ${{ fromJson(needs.discover_services_by_path.outputs.environments) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install dependencies
        run: |
          cd ./services/${{ matrix.environments }}
          npm ci

      - name: Run Build
        run: |
          cd ./services/${{ matrix.service }}
          npm run build --if-present
      
      - name: Run Lint
        run: |
          cd ./services/${{ matrix.service }}
          npm run lint --if-present
      
      # Upload the build artifacts
      - name: Upload build artifact for ${{ matrix.service }}
        if: env.changes == 'true' 
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.service }}-build
          path: ./services/${{ matrix.service }}
      






















































#########################################################################################
#########################################################################################
#########################################################################################
#  discover_services_from_json:    
#    name: Find out all the microservies from json file
#    runs-on: ubuntu-latest
#    outputs:
#      environments: ${{ steps.load_services.outputs.services }}
#      changed_microservices: ${{ steps.detect_changes.outputs.changed_microservices }}
#    
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0  # Fetch full commit history, not a shallow clone
#          
#      # Load microservices names from JSON
#      - name: Load microservices from JSON
#        id: load_services
#        run: |
#          services=$(jq -r '.microservices[] | .name' ./.github/workflows/microservices.json | paste -sd "," -)
#          # Output values as single-line strings
#          echo "Services: $services"
#          echo "services=$services" >> $GITHUB_OUTPUT
#      
#      # Load microservices names from JSON -> return array
#      # Detect changed microservices
#      - name: Detect changed microservices
#        id: detect_changes
#        run: |
#          services=$(jq -r '.microservices[] | .name' ./.github/workflows/microservices.json)
#          changed_services=()
#          for service in $services; do
#            if git diff --name-only HEAD^ HEAD | grep -q "^services/$service/"; then
#              changed_services+=("\"$service\"")
#            fi
#          done
#          # Format changed_microservices as a JSON array
#          if [ ${#changed_services[@]} -eq 0 ]; then
#            json_output="[]"
#          else
#            json_output=$(IFS=,; echo "[${changed_services[*]}]")
#          fi
#          echo "changed_microservices=$json_output" >> $GITHUB_OUTPUT
#
#      - name: Debug changed_microservices output
#        run: |
#          echo "Changed microservices: ${{ steps.detect_changes.outputs.changed_microservices }}"
#          
#  Build:
#    runs-on: ubuntu-latest     
#    needs: [ exploring_descovered_services ]
#    if: ${{ needs.discover_services_from_json.outputs.changed_microservices != '[]' }} 
#    
#    strategy:
#      matrix: 
#        changed_microservices: ${{ needs.discover_services_from_json.outputs.changed_microservices }}
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      
#      - name: Use Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: ${{ env.NODE_VERSION }}
#      
#      - name: Install dependencies
#        run: |
#          cd ./services/${{ matrix.changed_microservices }}
#          npm ci
#########################################################################################
#########################################################################################
#########################################################################################      
     





 
